version: 3

#################################################
#            computational domian               #
#################################################
domain:
  min_max_dep: [-10, 50] # depth in km
  min_max_lat: [0, 2] # latitude in degree
  min_max_lon: [0, 2] # longitude in degree
  n_rtp: [61, 61, 61] # number of nodes in depth,latitude,longitude direction

#################################################
#            traveltime data file path          #
#################################################
source:
  src_rec_file: OUTPUT_FILES/OUTPUT_FILES_joint_step2/src_rec_file_inv_0039_reloc_0039_obs.dat # source receiver file path
  swap_src_rec: true # swap source and receiver (only valid for regional source and receiver, those of tele remain unchanged)

#################################################
#            initial model file path            #
#################################################
model:
  init_model_path: OUTPUT_FILES/OUTPUT_FILES_joint_step2/final_model.h5 # path to initial model file 
#   model_1d_name: dummy_model_1d_name # 1D model name used in teleseismic 2D solver (iasp91, ak135, user_defined is available), defined in include/1d_model.h

#################################################
#            parallel computation settings      #
#################################################
parallel: # parameters for parallel computation
  n_sims: 8 # number of simultanoues runs (parallel the sources)
  ndiv_rtp: [1, 1, 1] # number of subdivision on each direction (parallel the computional domain)
  nproc_sub: 1 # number of processors for sweep parallelization (parallel the fast sweep method)
  use_gpu: false # true if use gpu (EXPERIMENTAL)

############################################
#            output file setting           #
############################################
output_setting:
  output_dir: OUTPUT_FILES/OUTPUT_FILES_joint_step3 # path to output director (default is ./OUTPUT_FILES/)
  output_source_field:     false # True: output the traveltime field and adjoint field of all sources at each iteration. Default: false. File: 'out_data_sim_group_X'.
  output_kernel:           false # True: output sensitivity kernel and kernel density. Default: false. File: 'out_data_sim_group_X'.
  output_final_model:      true # True: output merged final model. This file can be used as the input model for TomoATT. Default: true. File: 'model_final.h5'.
  output_middle_model:     false # True: output merged intermediate models during inversion. This file can be used as the input model for TomoATT. Default: false. File: 'middle_model_step_XXXX.h5'
  output_in_process:       false # True: output at each inv iteration, otherwise, only output step 0, Niter-1, Niter. Default: true. File: 'out_data_sim_group_0'.
  output_in_process_data:  false # True: output src_rec_file at each inv iteration, otherwise, only output step 0, Niter-2, Niter-1. Default: true. File: 'src_rec_file_step_XXXX.dat'
  single_precision_output: false # True: output results in single precision. Default: false.   
  verbose_output_level:    0 # output internal parameters, (to do).
  output_file_format: 0 # 0: hdf5, 1: ascii

# output files:
# File: 'out_data_grid.h5'. Keys: ['Mesh']['elem_conn'], element index; 
#                                 ['Mesh']['node_coords_p'], phi coordinates of nodes; 
#                                 ['Mesh']['node_coords_t'], theta coordinates of nodes; 
#                                 ['Mesh']['node_coords_r'], r coordinates of nodes;
#                                 ['Mesh']['node_coords_x'], phi coordinates of elements; 
#                                 ['Mesh']['node_coords_y'], theta coordinates of elements; 
#                                 ['Mesh']['node_coords_z'], r coordinates of elements; 
# File: 'out_data_sim_group_0'. Keys: ['model']['vel_inv_XXXX'], velocity model; 
#                                     ['model']['xi_inv_XXXX'], xi model; 
#                                     ['model']['eta_inv_XXXX'], eta model
#                                     ['model']['Ks_inv_XXXX'], sensitivity kernel related to slowness
#                                     ['model']['Kxi_inv_XXXX'], sensitivity kernel related to xi
#                                     ['model']['Keta_inv_XXXX'], sensitivity kernel related to eta
#                                     ['model']['Ks_density_inv_XXXX'], kernel density of Ks 
#                                     ['model']['Kxi_density_inv_XXXX'], kernel density of Kxi 
#                                     ['model']['Keta_density_inv_XXXX'], kernel density of Keta 
#                                     ['model']['Ks_over_Kden_inv_XXXX'], slowness kernel over kernel density
#                                     ['model']['Kxi_over_Kden_inv_XXXX'], xi kernel over kernel density
#                                     ['model']['Keta_over_Kden_inv_XXXX'], eta kernel over kernel density
#                                     ['model']['Ks_update_inv_XXXX'], slowness kernel over kernel density, smoothed by inversion grid
#                                     ['model']['Kxi_update_inv_XXXX'], xi kernel over kernel density, smoothed by inversion grid
#                                     ['model']['Keta_update_inv_XXXX'], eta kernel over kernel density, smoothed by inversion grid
# File: 'src_rec_file_step_XXXX.dat' or 'src_rec_file_forward.dat'. The synthetic traveltime data file.
# File: 'final_model.h5'. Keys: ['eta'], ['xi'], ['vel'], the final model.
# File: 'middle_model_step_XXXX.h5'. Keys: ['eta'], ['xi'], ['vel'], the model at step XXXX.
# File: 'inversion_grid.txt'. The location of inversion grid nodes
# File: 'objective_function.txt'. The objective function value at each iteration
# File: 'out_data_sim_group_X'. Keys: ['src_$src_name']['time_field_inv_XXXX'], traveltime field for source $src_name at iteration XXXX;
#                                     ['src_$src_name']['adjoint_field_inv_XXXX'], adjoint field for source $src_name at iteration XXXX;


#################################################
#          inversion or forward modeling        #
#################################################
# run mode
# 0 for forward simulation only,
# 1 for inversion
# 2 for earthquake relocation
# 3 for inversion + earthquake relocation
run_mode: 2

have_tele_data: false # An error will be reported if false but source out of study region is used. Default: false.


#################################################
#          relocation parameters setting        #
#################################################
relocation: # update earthquake hypocenter and origin time (when run_mode : 2 and 3)
  min_Ndata: 4 # if the number of data of the earthquake is less than <min_Ndata>, the earthquake will not be relocated.  defaut value: 4 

  # relocation_strategy
  step_length : 0.01 # initial step length of relocation perturbation. 0.01 means maximum 1% perturbation for each iteration.
  step_length_decay : 0.9 # if objective function increase, step size -> step length * step_length_decay. default: 0.9
  rescaling_dep_lat_lon_ortime  : [10, 15, 15, 1]  # The perturbation is related to <rescaling_dep_lat_lon_ortime>. Unit: km,km,km,second
  max_change_dep_lat_lon_ortime : [10, 15, 15, 1]     # the change of dep,lat,lon,ortime do not exceed max_change. Unit: km,km,km,second
  max_iterations : 100 # maximum number of iterations for relocation
  tol_gradient : 0.0001 # if the norm of gradient is smaller than the tolerance, the iteration of relocation terminates

  # -------------- using absolute traveltime data --------------
  abs_time:
    use_abs_time : false # 'yes' for using absolute traveltime data to update ortime and location; 'no' for not using (no need to set parameters in this section)
    residual_weight : [1, 3, 1, 1]      # XXX is the absolute traveltime residual (second) = abs(t^{obs}_{n,i} - t^{syn}_{n,j})
    distance_weight : [1, 3, 1, 1]      # XXX is epicenter distance (km) between the source and receiver related to the data

  # -------------- using common source differential traveltime data --------------
  cs_dif_time:
    use_cs_time : false # 'yes' for using common source differential traveltime data to update ortime and location; 'no' for not using (no need to set parameters in this section)
    residual_weight  : [1, 3, 1, 1]    # XXX is the common source differential traveltime residual (second) = abs(t^{obs}_{n,i} - t^{obs}_{n,j} - t^{syn}_{n,i} + t^{syn}_{n,j}).
    azimuthal_weight : [100, 200, 1, 1]    # XXX is the azimuth difference between two separate stations related to the common source.

  # -------------- using common receiver differential traveltime data --------------
  cr_dif_time:
    use_cr_time : true # 'yes' for using common receiver differential traveltime data to update ortime and location; 'no' for not using (no need to set parameters in this section)
    residual_weight  : [15, 30, 1, 1]    # XXX is the common receiver differential traveltime residual (second) = abs(t^{obs}_{n,i} - t^{obs}_{m,i} - t^{syn}_{n,i} + t^{syn}_{m,i})
    azimuthal_weight : [15, 30, 1, 1]    # XXX is the azimuth difference between two separate sources related to the common receiver.


  # -------------- global weight of different types of data (to balance the weight of different data) --------------
  global_weight:
    balance_data_weight: true # yes: over the total weight of the each type of the data. no: use original weight (below weight for each type of data needs to be set)
    abs_time_local_weight: 1 # weight of absolute traveltime data for relocation after balance,     default: 1.0
    cs_dif_time_local_weight: 1 # weight of common source differential traveltime data for relocation after balance,   default: 1.0
    cr_dif_time_local_weight: 1 # weight of common receiver differential traveltime data for relocation after balance,   default: 1.0
