version: 3

#################################################
#            computational domian               #
#################################################
domain:
  min_max_dep: [-10, 50] # depth in km
  min_max_lat: [30, 32] # latitude in degree
  min_max_lon: [30, 32] # longitude in degree
  n_rtp: [61, 61, 61] # number of nodes in depth,latitude,longitude direction

#################################################
#            traveltime data file path          #
#################################################
source:
  src_rec_file: set_data_path # source receiver file path
  swap_src_rec: true # swap source and receiver

#################################################
#            initial model file path            #
#################################################
model:
  init_model_path: set_model_path # path to initial model file 

#################################################
#            parallel computation settings      #
#################################################
parallel: # parameters for parallel computation
  n_sims: 8 # number of simultanoues runs (parallel the sources)
  ndiv_rtp: [1, 1, 1] # number of subdivision on each direction (parallel the computional domain)

############################################
#            output file setting           #
############################################
output_setting:
  output_dir: set_output_path # path to output director (default is ./OUTPUT_FILES/)                                     
  output_source_field:     false # True: output the traveltime field and adjoint field of all sources at each iteration. Default: false. File: 'out_data_sim_group_X'.
  output_kernel:           false # True: output sensitivity kernel. Default: false. File: 'out_data_sim_group_X'.
  output_final_model:      true # True: output merged final model. This file can be used as the input model for TomoATT. Default: true. File: 'model_final.h5'.
  output_middle_model:     false # True: output merged intermediate models during inversion. This file can be used as the input model for TomoATT. Default: false. File: 'middle_model_step_XXXX.h5'
  output_in_process:       true # True: output at each inv iteration, otherwise, only output step 0, Niter-1, Niter. Default: true. File: 'out_data_sim_group_0'.
  output_in_process_data:  true # True: output src_rec_file at each inv iteration, otherwise, only output step 0, Niter-2, Niter-1. Default: true. File: 'src_rec_file_step_XXXX.dat'
  single_precision_output: false # True: output results in single precision. Default: false.   
  verbose_output_level:    0 # output internal parameters, (to do).
  output_file_format: 0 # 0: hdf5, 1: ascii                     

#################################################
#          inversion or forward modeling        #
#################################################
# run mode
# 0 for forward simulation only,
# 1 for inversion
# 2 for earthquake relocation
# 3 for inversion + earthquake relocation
run_mode: 1

###################################################
#          model update parameters setting        #
###################################################
model_update:
  max_iterations: 40 # maximum number of inversion iterations

  step_length: 0.02 # initial step length of model perturbation. 0.01 means maximum 1% perturbation for each iteration.

  # parameters for optim_method 0 (gradient_descent)
  optim_method_0:
    # if the angle between the current and the previous gradients is greater than step_length_gradient_angle, step size -> step length * step_length_change[0]. 
    # otherwise,                                                                                              step size -> step length * step_length_change[1]. 
    step_length_gradient_angle: 120 # default: 120.0 
    step_length_change: [0.5, 1.2] # default: [0.5,1.2] 
    
  
  # parameters for smooth method 0 (multigrid model parametrization)
  # inversion grid can be viewed in OUTPUT_FILES/inversion_grid.txt
  n_inversion_grid: 5 # number of inversion grid sets

  uniform_inv_grid_dep: true # true for using uniform inversion grid; false for using flexible inversion grid
  uniform_inv_grid_lat: true # true for using uniform inversion grid; false for using flexible inversion grid
  uniform_inv_grid_lon: true # true for using uniform inversion grid; false for using flexible inversion grid
  
  # settings for uniform inversion grid
  n_inv_dep_lat_lon: [12, 11, 11] # number of inversion grid in depth, latitude, and longitude direction
  min_max_dep_inv: [-7, 63] # inversion grid for vel in depth (km)
  min_max_lat_inv: [30, 32] # inversion grid for vel in latitude (degree)
  min_max_lon_inv: [30, 32] # inversion grid for vel in longitude (degree)

  # settings for flexible inversion grid
  dep_inv:    [-7.0, -3.0,  0.0,  3.0,  7.0, 12.0, 18.0, 25.0, 33.0, 42.0, 52.0, 63.0]   # inversion grid for vel in depth (km)
  lat_inv:    [30.0, 30.2, 30.4, 30.6, 30.8, 31.0, 31.2, 31.4, 31.6, 31.8, 32.0]         # inversion grid for vel in latitude (degree)
  lon_inv:    [30.0, 30.2, 30.4, 30.6, 30.8, 31.0, 31.2, 31.4, 31.6, 31.8, 32.0]         # inversion grid for vel in longitude (degree)
  trapezoid:  [1.0, 0.0, 50.0]  # usually set as [1.0, 0.0, 50.0] (default)

  # if we want to use another inversion grid for inverting anisotropy, set invgrid_ani: true (default: false). Otherwise, the inversion grid for isotropy will be the same as that for velocity.
  invgrid_ani: true

  # settings for uniform inversion grid
  n_inv_dep_lat_lon_ani: [12, 11, 11] # number of inversion grid in depth, latitude, and longitude direction for anisotropy
  min_max_dep_inv_ani: [-7, 63] # inversion grid for ani in depth (km)
  min_max_lat_inv_ani: [30, 32] # inversion grid for ani in latitude (degree)
  min_max_lon_inv_ani: [30, 32] # inversion grid for ani in longitude (degree)

  # settings for flexible inversion grid for anisotropy
  dep_inv_ani:    [-7.0, -3.0,  0.0,  3.0,  7.0, 12.0, 18.0, 25.0, 33.0, 42.0, 52.0, 63.0]   # inversion grid for ani in depth (km)
  lat_inv_ani:    [30.0, 30.2, 30.4, 30.6, 30.8, 31.0, 31.2, 31.4, 31.6, 31.8, 32.0]         # inversion grid for ani in latitude (degree)
  lon_inv_ani:    [30.0, 30.2, 30.4, 30.6, 30.8, 31.0, 31.2, 31.4, 31.6, 31.8, 32.0]         # inversion grid for ani in longitude (degree)
  trapezoid_ani:  [1.0, 0.0, 50.0]  # usually set as [1.0, 0.0, 50.0] (default)

  # Carefully change trapezoid and trapezoid_ani, if you really want to use trapezoid inversion grid, increasing the inversion grid spacing with depth to account for the worse data coverage in greater depths.
  # The trapezoid_ inversion grid with index (i,j,k) in longitude, latitude, and depth is defined as:
  # if                 dep_inv[k] < trapezoid[1], lon = lon_inv[i];                                        
  #                                               lat = lat_inv[j];              
  #                                               dep = dep_inv[k];
  # if trapezoid[1] <= dep_inv[k] < trapezoid[2], lon = mid_lon_inv+(lon_inv[i]-mid_lon_inv)*(dep_inv[k]-trapezoid[1])/(trapezoid[2]-trapezoid[1])*trapezoid[0];
  #                                               lat = mid_lat_inv+(lat_inv[i]-mid_lat_inv)*(dep_inv[k]-trapezoid[1])/(trapezoid[2]-trapezoid[1])*trapezoid[0]; 
  #                                               dep = dep_inv[k];
  # if trapezoid[2] <= dep_inv[k],                lon = mid_lon_inv+(lon_inv[i]-mid_lon_inv)*trapezoid[0]; 
  #                                               lat = mid_lat_inv+(lat_inv[i]-mid_lat_inv)*trapezoid[0]; 
  #                                               dep = dep_inv[k];
  # The shape of trapezoid inversion gird (x) looks like:
  #
  #                                 lon_inv[0]   [1]      [2]      [3]      [4]
  #                                  |<-------- (lon_inv[end] - lon_inv[0]) ---->|    
  #  dep_inv[0]                      |   x        x        x        x        x   | 
  #                                  |                                           | 
  #  dep_inv[1]                      |   x        x        x        x        x   |          
  #                                  |                                           |
  #  dep_inv[2] = trapezoid[1]      /    x        x        x        x        x    \
  #                                /                                               \
  #  dep_inv[3]                   /    x         x         x         x         x    \
  #                              /                                                   \
  #  dep_inv[4] = trapezoid[2]  /    x          x          x          x          x    \
  #                            |                                                       |
  #  dep_inv[5]                |     x          x          x          x          x     |                                     
  #                            |                                                       |  
  #  dep_inv[6]                |     x          x          x          x          x     |  
  #                            |<---- trapezoid[0]* (lon_inv[end] - lon_inv[0]) ------>| 

  # -------------- using absolute traveltime data --------------
  abs_time:
    use_abs_time: true # 'true' for using absolute traveltime data to update model parameters; 'false' for not using (no need to set parameters in this section)

  # -------------- using common source differential traveltime data --------------
  cs_dif_time:
    use_cs_time: false # 'true' for using common source differential traveltime data to update model parameters; 'false' for not using (no need to set parameters in this section)

  # -------------- using common receiver differential traveltime data --------------
  cr_dif_time:
    use_cr_time: false # 'true' for using common receiver differential traveltime data to update model parameters; 'false' for not using (no need to set parameters in this section)

  # -------------- inversion parameters --------------
  update_slowness : true # update slowness (velocity) or not.              default: true
  update_azi_ani  : true # update azimuthal anisotropy (xi, eta) or not.   default: false
